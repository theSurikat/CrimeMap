/*  Syntax Quick Reference
  --------------------------
  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)
  span($ratio: 1, $offset: 0)
  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)
  unshift()
  edit()
  center($max_width: 1410px, $pad: 0)
  stack($pad: 0, $align: false)
  unstack()
  align($direction: both)
  cf()
*/
/**
 * Grid settings.
 * All values are defaults and can therefore be easily overidden.
 */
/**
 * List functions courtesy of the wonderful folks at Team Sass.
 * Check out their awesome grid: Singularity.
 */
/**
 * Get  percentage from a given ratio.
 * @param {number} [$ratio=1] - The column ratio of the element.
 * @returns {number} - The percentage value.
 */
/**
 * Work out the column widths based on the ratio and gutter sizes.
 * @param {number} [$ratios=1] - The column ratio of the element.
 * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.
 * @returns {list} $width $gutter - A list containing the with and gutter for the element.
 */
/**
 * Get the set layout direction for the project.
 * @returns {string} $direction - The layout direction.
 */
/**
 * Replace a specified list value with a new value (uses built in set-nth() if available)
 * @param {list} $list - The list of values you want to alter.
 * @param {number} $index - The index of the list item you want to replace.
 * @param {*} $value - The value you want to replace $index with.
 * @returns {list} $list - The list with the value replaced or removed.
 * @warn if an invalid index is supplied.
 */
/**
 * Reverse a list (progressively enhanced for Sass 3.3)
 * @param {list} $list - The list of values you want to reverse.
 * @returns {list} $result - The reversed list.
 */
/**
 * Get the opposite direction to a given value.
 * @param {string} $dir - The direction you want the opposite of.
 * @returns {string} - The opposite direction to $dir.
 * @warn if an incorrect string is provided.
 */
/**
 * Style an element as a column with a gutter.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.
 * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column mixin.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Get the width of a column and nothing else.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Get the gutter size of a column and nothing else.
 * @param {number} [ratios=1] - A width relative to its container as a fraction.
 * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column-width function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * An alias for the column-gutter function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Style an element as a column without any gutters for a seamless row.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.
 * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.
 */
/**
 * Reorder columns without altering the HTML.
 * @param {number} [$ratios=0] - Specify how far along you want the element to move.
 * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Reset an element that has had shift() applied to it.
 */
/**
 * View the grid and its layers for easy debugging.
 * @param {string} [$color=black] - The background tint applied.
 * @param {boolean} [$important=false] - Whether to apply the style as !important.
 */
/**
 *  Alias for edit().
 */
/**
 * Horizontally center an element.
 * @param {number} [$max-width=1410px] - The max width the element can be.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 */
/**
 * Uncenter an element.
 */
/**
 * Stack an element so that nothing is either side of it.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 * @param {boolean/string} [$align=false] - Specify the text align for the element.
 */
/**
 * Unstack an element.
 */
/**
 * Center an element on either or both axes.
 * @requires A parent container with relative positioning.
 * @param {string} [$direction=both] - Specify which axes to center the element on.
 */
/**
 * Apply a clearfix to an element.
 */
html, body {
  background-color: #fff;
  font-family: BrandonReg, serif;
  color: #4d4d4d; }

h2 {
  margin-bottom: 0;
  text-transform: uppercase;
  font-family: BrandonReg; }

ul {
  list-style: none;
  padding: 0; }

section#selection {
  position: absolute;
  background-color: #88dce5;
  top: 0;
  left: 0;
  height: 100vh;
  width: 100vw;
  z-index: 2; }
  section#selection.stage-0 {
    background: url(../../img/home-background-pattern.png), #fff;
    background-size: auto 250px; }
  section#selection.stage-1 {
    background: url(../../img/type-background-pattern.png), #fff;
    background-size: auto 250px; }
  section#selection.stage-2 {
    background: url(../../img/theme-background-pattern.png), #fff;
    background-size: auto 250px; }
  section#selection.stage-3 {
    display: none; }
  section#selection > div {
    background-color: #fff;
    text-align: center;
    width: 100%;
    max-width: 800px;
    padding: 50px 30px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    -webkit-transform: translate(-50%, -50%); }
    section#selection > div h1 {
      text-transform: uppercase;
      font-family: BrandonBold;
      font-size: 3em;
      margin: 0; }
    section#selection > div h2 {
      text-transform: none;
      font-family: BrandonLight;
      font-size: 1.2em;
      margin-top: -6px; }
    section#selection > div button {
      padding: 14px 80px;
      border-radius: 8px;
      border: none;
      outline: none;
      font-family: BrandonReg;
      font-size: 1.3em; }
    section#selection > div button[disabled] {
      background-color: #ddd !important;
      color: #b3b3b3 !important; }
    section#selection > div .opt {
      *zoom: 1;
      float: left;
      clear: none;
      text-align: inherit;
      width: 31.33333%;
      margin-left: 0%;
      margin-right: 3%; }
      section#selection > div .opt:before, section#selection > div .opt:after {
        content: '';
        display: table; }
      section#selection > div .opt:after {
        clear: both; }
      section#selection > div .opt:nth-of-type(3n) {
        margin-right: 0%;
        float: right; }
      section#selection > div .opt:nth-of-type(3n + 1) {
        clear: both; }
    section#selection > div input {
      display: none; }
    section#selection > div label {
      box-sizing: border-box;
      display: block;
      font-size: 1.3em;
      cursor: pointer;
      padding: 10px 0;
      margin-bottom: 14px; }
    section#selection > div .options {
      *zoom: 1; }
      section#selection > div .options:before, section#selection > div .options:after {
        content: '';
        display: table; }
      section#selection > div .options:after {
        clear: both; }
  section#selection .stage-0 {
    border: 5px solid #d84a72;
    width: 100%;
    max-width: 650px; }
    section#selection .stage-0 .logo {
      margin-top: 40px;
      margin-bottom: 8px; }
    section#selection .stage-0 button {
      margin-top: 80px;
      background-color: #d84a72;
      color: #fff; }
      section#selection .stage-0 button:hover {
        background-color: #dd6288; }
  section#selection .stage-1, section#selection .stage-2 {
    border: 5px solid #6cc2e0;
    padding: 50px 30px 20px; }
    section#selection .stage-1 h1, section#selection .stage-2 h1 {
      color: #6cc2e0;
      font-size: 2.2em;
      margin-bottom: 60px; }
    section#selection .stage-1 button, section#selection .stage-2 button {
      margin-top: 40px;
      background-color: #6cc2e0;
      color: #fff; }
      section#selection .stage-1 button:hover, section#selection .stage-2 button:hover {
        background-color: #9fd1d3; }
    section#selection .stage-1 label, section#selection .stage-2 label {
      border: 3.5px solid #6cc2e0;
      color: #6cc2e0; }
    section#selection .stage-1 input:checked + label, section#selection .stage-1 label:hover, section#selection .stage-2 input:checked + label, section#selection .stage-2 label:hover {
      color: #fff;
      background-color: #6cc2e0; }
  section#selection .stage-2 {
    border: 5px solid #9624aa; }
    section#selection .stage-2 h1 {
      color: #9624aa; }
    section#selection .stage-2 button {
      background-color: #9624aa;
      color: #fff; }
      section#selection .stage-2 button:hover {
        background-color: #c19fd1; }
    section#selection .stage-2 label {
      border: 3.5px solid #9624aa;
      color: #9624aa; }
    section#selection .stage-2 input:checked + label, section#selection .stage-2 label:hover {
      background-color: #9624aa; }

section#grid {
  float: left;
  box-sizing: border-box;
  width: calc(100% - 450px);
  height: 100vh;
  overflow: hidden; }
  section#grid header {
    margin: 0 auto;
    padding: 0 30px; }
    section#grid header a {
      float: right;
      padding-top: 28px;
      margin-left: 10px;
      cursor: pointer;
      color: #88dce5; }
      section#grid header a:hover {
        color: #6cc2e0; }
    section#grid header #line {
      color: #808080; }
    section#grid header .reset {
      float: right;
      padding-top: 28px;
      color: #88dce5;
      cursor: pointer; }
      section#grid header .reset:hover {
        color: #6cc2e0; }
  section#grid h2 {
    color: #88dce5;
    display: inline-block; }
  section#grid hr {
    border: 1px solid #88dce5; }
  section#grid ul {
    height: calc(100% - 80px);
    padding: 0 30px;
    overflow-y: scroll; }
  section#grid .item {
    *zoom: 1;
    float: left;
    clear: none;
    text-align: inherit;
    width: 48.5%;
    margin-left: 0%;
    margin-right: 3%;
    cursor: pointer; }
    section#grid .item:before, section#grid .item:after {
      content: '';
      display: table; }
    section#grid .item:after {
      clear: both; }
    section#grid .item:nth-of-type(2n) {
      margin-right: 0%;
      float: right; }
    section#grid .item:nth-of-type(2n + 1) {
      clear: both; }

section#cart {
  position: fixed;
  top: 0;
  right: 0;
  box-sizing: border-box;
  width: 450px;
  height: 100vh;
  background-color: #e9f4f3;
  border-left: 2px solid #808080; }
  section#cart header {
    margin: 0 auto;
    color: #808080;
    padding: 0 30px; }
    section#cart header .count {
      float: right;
      padding-top: 10px; }
  section#cart hr {
    border: 1px solid #808080; }
  section#cart .cart {
    height: calc(100% - 160px);
    overflow-y: scroll;
    padding: 0 30px; }
  section#cart .item {
    *zoom: 1;
    margin-bottom: 14px;
    padding-bottom: 14px;
    border-bottom: 1px solid #b3b3b3; }
    section#cart .item:before, section#cart .item:after {
      content: '';
      display: table; }
    section#cart .item:after {
      clear: both; }
    section#cart .item h3 {
      padding-right: 30px; }
    section#cart .item img {
      width: 60px; }
    section#cart .item .content {
      padding-top: 2px; }
    section#cart .item .savings {
      float: right;
      font-size: 1.1em; }
    section#cart .item .strikethrough {
      text-decoration: line-through;
      color: red; }
    section#cart .item .price {
      color: #b3b3b3;
      font-size: 1em; }
    section#cart .item a {
      color: #6cc2e0;
      font-size: .9em;
      text-decoration: none;
      cursor: pointer; }
      section#cart .item a:hover {
        color: #88dce5; }
  section#cart .checkout {
    position: absolute;
    bottom: 20px;
    left: 0;
    right: 0;
    width: 80%;
    margin: 0 auto;
    padding: 12px 0;
    background-color: #6cc2e0;
    color: #fff;
    font-size: 1.4em;
    font-family: BrandonLight;
    border-radius: 10px;
    border: none;
    outline: none; }
    section#cart .checkout:hover {
      background-color: #9fd1d3; }

.cost {
  text-align: right; }
  .cost h3 {
    text-transform: uppercase;
    font-size: 1.5em;
    color: #808080;
    margin: 0; }
  .cost .total {
    font-family: BrandonLight;
    color: #4d4d4d; }
  .cost .savings {
    margin-left: auto;
    margin-top: 0;
    font-size: .8em; }

.item {
  margin-bottom: 30px; }
  .item img {
    float: left;
    border: 1px solid #b3b3b3;
    width: 100px;
    margin-right: 16px; }
  .item .content {
    padding-top: 10px; }
  .item h3 {
    font-family: BrandonReg;
    font-size: 1.2em;
    margin: 0; }
  .item p {
    margin: 0; }
  .item .price {
    color: #88dce5;
    margin: 0;
    font-family: BrandonLight;
    font-size: 1.4em; }
  .item button {
    position: relative;
    float: right;
    width: 25px;
    height: 25px;
    background: none;
    border: none;
    outline: none;
    color: #b3b3b3;
    font-size: .8em;
    line-height: 22px;
    z-index: 1;
    border-radius: 50%;
    border: 1px solid #fff; }
    .item button:hover {
      border: 1px solid #b3b3b3; }

@media only screen and (max-width: 1200px) {
  section#grid .item {
    display: block;
    clear: both;
    float: none;
    width: 100%;
    margin-left: auto;
    margin-right: auto; }
    section#grid .item:first-child {
      margin-left: auto; }
    section#grid .item:last-child {
      margin-right: auto; } }
